generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contents {
  id         Int      @id @unique @default(autoincrement())
  user_id    String   @db.VarChar(40)
  created_at DateTime @default(now()) @db.Timestamptz(6)
}

model users {
  uid        String   @id @unique @db.VarChar(40)
  username   String   @unique @db.VarChar(30)
  email      String   @unique @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  bio        String?  @db.VarChar(200)
  profile    String?  @db.VarChar(255)
  name       String   @db.VarChar(30)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  banner     String?  @db.VarChar(255)

  @@index([username])
}

model user_fcm_tokens {
  id         Int      @id @unique @default(autoincrement())
  user_id    String   @db.VarChar(40)
  value      String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@unique([user_id, value])
}

model user_follows {
  id           Int      @id @unique @default(autoincrement())
  follower_id  String   @db.VarChar(40)
  following_id String   @db.VarChar(40)
  created_at   DateTime @default(now()) @db.Timestamptz(6)

  @@unique([follower_id, following_id])
  @@index([follower_id, following_id])
}

model groups {
  id              String          @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String          @db.VarChar(30)
  description     String          @db.VarChar(300)
  admin_id        String          @db.VarChar(40)
  banner          String          @db.VarChar(255)
  membership_type membership_type
  updated_at      DateTime        @default(now()) @db.Timestamptz(6)
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
}

model group_members {
  id          Int       @id @unique @default(autoincrement())
  user_id     String    @db.VarChar(40)
  group_id    String    @db.Uuid
  accepted_at DateTime? @db.Timestamptz(6)
  moderator   DateTime? @db.Timestamptz(6)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)

  @@unique([user_id, group_id])
  @@index([user_id, group_id])
}

model prayers {
  id           String   @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.VarChar(40)
  group_id     String?  @db.Uuid
  anon         Boolean  @default(false)
  value        String   @db.VarChar(500)
  media        String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  corporate_id String?  @db.Uuid
}

model corporate_prayers {
  id          String    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @db.VarChar(40)
  group_id    String    @db.Uuid
  description String?   @db.VarChar(300)
  started_at  DateTime? @db.Date
  ended_at    DateTime? @db.Date
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  title       String    @db.VarChar(30)
  prayers     String?   @db.VarChar(2500)
  reminder_id Int?      @db.Integer
}

model prayer_prays {
  id         Int      @id @unique @default(autoincrement())
  user_id    String   @db.VarChar(40)
  value      String?  @db.VarChar(200)
  created_at DateTime @db.Timestamptz(6)
  prayer_id  String   @db.Uuid
}

model reminders {
  id         Int      @id @unique @default(autoincrement())
  days       String   @db.VarChar(100)
  time       DateTime @db.Timetz()
  value      String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamptz(6)
}

model group_invitations {
  id         Int      @id @unique @default(autoincrement())
  user_id    String   @db.VarChar(40)
  group_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@unique([user_id, group_id])
  @@index([user_id, group_id])
}

model notifications {
  id             Int      @id @unique @default(autoincrement())
  user_id        String   @db.VarChar(40)
  message        String   @db.VarChar(100)
  group_id       String?  @db.Uuid
  prayer_id      String?  @db.Uuid
  corporate_id   String?  @db.Uuid
  target_user_id String?  @db.VarChar(40)
  created_at     DateTime @default(now()) @db.Timestamptz(6)
}

enum membership_type {
  open
  restricted
  private
}
